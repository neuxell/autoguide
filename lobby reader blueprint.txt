/* take screenshot
check all champ placeholders
-> check if a champ is selected there
-> if so, find out what that champ is
return the name of the champ? Or return the array of all the champs selected (+ banned?)

I think it should return an array of all in play champs.
Integer[][] // rows = team 1, team 2
			// cols = players 1-5, per team

I thought about making Portrait objects,
but the simplest route would be to use a 2d integer array containing the rgb integer
and using bitwise to find the ARGB

Integer[2][0] // get player 3 from team 1

--------------------------------------------------------*/
public static void main(String[] args){
	BufferedImage img = screenshot();

	// default client location, adjust by screen resolution
	Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
	Dimension defaultClientSize = new Dimension(1024, 768);
	Dimension topLeftCoords = new Dimension(((screenSize.x/4)-(defaultClientSize.x/4)),
											(screenSize.y/4)-(defaultClientSize.y/4));
	int t1x = topLeftCoords.x+34; // team 1 x
	int t2x = topLeftCoords.x+1010; // team 2 x
	int y1 = topLeftCoords.y+113; // y-position of the first player on each team
	int playerSpacing = 66; // spacing per player

	// put this in its own thread, for team 1. Then do a second for team 2
	for(int i = 0; i < 5; i++){ // for every player
		String selection = identifySelection(new Dimension(t1x, y1+playerSpacing*i));
	}

	for(int i = 0; i < 5; i++){ // for every player
		String selection = identifySelection(new Dimension(t2x, y1+playerSpacing*i));
	}
}

/*------------------------------
supposedly, [GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
int width = gd.getDisplayMode().getWidth();
int height = gd.getDisplayMode().getHeight();]
is supposed to be better for grabbing the monitor resolution in a multi-monitor config.
i.e. use this as a back up if program goes kaputt due to resolution finding problems*/